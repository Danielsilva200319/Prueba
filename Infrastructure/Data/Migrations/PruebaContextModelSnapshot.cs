// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(PruebaContext))]
    partial class PruebaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("core.Entities.Accion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EntregaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreAccion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("EntregaId");

                    b.ToTable("Accion", (string)null);
                });

            modelBuilder.Entity("core.Entities.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Citas")
                        .HasColumnType("date");

                    b.Property<int>("IdIntervaloHorario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIntervaloHorario");

                    b.ToTable("Cita", (string)null);
                });

            modelBuilder.Entity("core.Entities.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("CargaPrevista")
                        .HasColumnType("date");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateOnly>("EntregaPrevista")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("HoraCita")
                        .HasColumnType("time");

                    b.Property<int>("IdAccion")
                        .HasColumnType("int");

                    b.Property<int>("IdCita")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("IdIntervaloHorario")
                        .HasColumnType("int");

                    b.Property<string>("NumeroEntrega")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("IdAccion");

                    b.HasIndex("IdCita");

                    b.HasIndex("IdEstadoSolicitud");

                    b.HasIndex("IdIntervaloHorario");

                    b.ToTable("Entrega", (string)null);
                });

            modelBuilder.Entity("core.Entities.EstadoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("EstadoSolicitud", (string)null);
                });

            modelBuilder.Entity("core.Entities.IntervaloHorario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IntervalosHorarios")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("NumerosVehiculos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IntervaloHorario", (string)null);
                });

            modelBuilder.Entity("core.Entities.Accion", b =>
                {
                    b.HasOne("core.Entities.Entrega", null)
                        .WithMany("Accions")
                        .HasForeignKey("EntregaId");
                });

            modelBuilder.Entity("core.Entities.Cita", b =>
                {
                    b.HasOne("core.Entities.IntervaloHorario", "IntervaloHorario")
                        .WithMany("Citas")
                        .HasForeignKey("IdIntervaloHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntervaloHorario");
                });

            modelBuilder.Entity("core.Entities.Entrega", b =>
                {
                    b.HasOne("core.Entities.Accion", "Acciones")
                        .WithMany("Entregas")
                        .HasForeignKey("IdAccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("core.Entities.Cita", "Citas")
                        .WithMany("Entregas")
                        .HasForeignKey("IdCita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("core.Entities.EstadoSolicitud", "EstadosSolicitudes")
                        .WithMany("Entregas")
                        .HasForeignKey("IdEstadoSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("core.Entities.IntervaloHorario", "IntervalosHorarios")
                        .WithMany("Entregas")
                        .HasForeignKey("IdIntervaloHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acciones");

                    b.Navigation("Citas");

                    b.Navigation("EstadosSolicitudes");

                    b.Navigation("IntervalosHorarios");
                });

            modelBuilder.Entity("core.Entities.Accion", b =>
                {
                    b.Navigation("Entregas");
                });

            modelBuilder.Entity("core.Entities.Cita", b =>
                {
                    b.Navigation("Entregas");
                });

            modelBuilder.Entity("core.Entities.Entrega", b =>
                {
                    b.Navigation("Accions");
                });

            modelBuilder.Entity("core.Entities.EstadoSolicitud", b =>
                {
                    b.Navigation("Entregas");
                });

            modelBuilder.Entity("core.Entities.IntervaloHorario", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Entregas");
                });
#pragma warning restore 612, 618
        }
    }
}
